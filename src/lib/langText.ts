type Header = {
  home: string;
  en: string;
  ru: string;
  login: string;
  register: string;
  signOut: string;
};

type Welcome = {
  title: {
    1: string;
    2: string;
    3: string;
  };
  text: string;
  login: string;
  register: string;
  dashboard: string;
};

type TeamMemder = {
  name: string;
  description: string;
};

type OurTeam = {
  title: string;
  1: TeamMemder;
  2: TeamMemder;
  3: TeamMemder;
};

type AuthPage = {
  title: {
    login: string;
    register: string;
  };
  toast: {
    title: string;
    description: string;
    error: string;
  };
  usernameLabel: string;
  usernamePlaceholder: string;
  emailLabel: string;
  emailPlaceholder: string;
  passwordLabel: string;
  passwordPlaceholder: string;
  submitButton: string;
};

type NotFound = {
  title: string;
  homeButton: string;
};

export type Validation = {
  password: {
    min: string;
    max: string;
    latin: string;
    number: string;
    symbol: string;
  };
  username: string;
};

type Dashboard = {
  docs: string;
  url: {
    title: string;
    edit: string;
    save: string;
  };
  variables: string;
  headers: string;
};

type langText = {
  header: Header;
  welcome: Welcome;
  team: {
    aboutTeam: {
      title: string;
      text: string;
    };
    ourTeam: OurTeam;
  };
  authPage: AuthPage;
  notFound: NotFound;
  validation: Validation;
  dashboard: Dashboard;
};

export const enText: langText = {
  header: {
    home: 'Home',
    en: 'EN',
    ru: 'RU',
    login: 'Login',
    register: 'Register',
    signOut: 'Sign Out',
  },
  welcome: {
    title: {
      '1': 'Welcome to ',
      '2': 'Rick and Morty',
      '3': ' GraphQl',
    },
    text: 'Welcome to our GraphQL-powered website! Here you can explore the amazing world of the Rick and Morty API using GraphQL. Discover information about your favorite characters, episodes, and more. Get ready for an exciting journey through the multiverse!',
    login: 'Login',
    register: 'Register',
    dashboard: 'Main Page',
  },
  team: {
    aboutTeam: {
      title: 'About Team',
      text: 'Our frontend development team is a group of talented and dedicated professionals who are passionate about creating exceptional user experiences. With their expertise in HTML, CSS, and JavaScript, they bring websites and web applications to life. The team is committed to staying up to date with the latest frontend technologies and best practices. They are constantly exploring new frameworks, libraries.',
    },
    ourTeam: {
      title: 'Our Team',
      '1': {
        name: 'Dmitry Konev',
        description:
          "Aspiring web developer diving into the world of React. Eager to learn and create interactive user interfaces. Let's code! üöÄ",
      },
      '2': {
        name: 'Natalia Lebedeva',
        description:
          'Natalia has a higher education in construction, but has been interested in programming all her life. She started her path in IT with Python and machine learning, and then got acquainted with web development and realized that she had found her direction. Now she does what she is really interested in, what energizes and inspires her.',
      },
      '3': {
        name: 'Nikita Starmoussov',
        description:
          "Nikita, another of our promising junior frontend developers, is the embodiment of ambition and skill. Young yet incredibly adept, his drive to be the best is palpable in every task he undertakes.. Every line of code he writes echoes his dedication and eagerness to excel. With such passion, there's no doubt that the sky's the limit for him in the tech world.",
      },
    },
  },
  authPage: {
    title: {
      login: 'Authorization',
      register: 'Registration',
    },
    toast: {
      title: 'Success',
      description: 'You are successfully authorized',
      error: 'Error',
    },
    usernameLabel: 'Username',
    usernamePlaceholder: 'Your name',
    emailLabel: 'E-mail',
    emailPlaceholder: 'Your e-mail',
    passwordLabel: 'Password',
    passwordPlaceholder: 'Your password',
    submitButton: 'Submit',
  },
  notFound: {
    title: 'Page not found',
    homeButton: 'Go Home',
  },
  validation: {
    password: {
      min: 'Password must be at least 8 characters.',
      max: 'Maximum password length 32 characters.',
      latin: 'Password must contain a latin letter',
      number: 'Password must contain a number',
      symbol: `Password must contain a special character: ,."'!@#$%^&*()_+=-`,
    },
    username: 'Username must be at least 2 characters.',
  },
  dashboard: {
    docs: 'DOCS',
    url: {
      title: 'URL',
      edit: 'Edit',
      save: 'Save',
    },
    variables: 'Variables',
    headers: 'Headers',
  },
};

export const ruText: langText = {
  header: {
    home: '–î–æ–º',
    en: '–ê–ù–ì–õ',
    ru: '–†–£–°',
    login: '–í–æ–π—Ç–∏',
    register: '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è',
    signOut: '–í—ã–π—Ç–∏',
  },
  welcome: {
    title: {
      '1': '–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç ',
      '2': '–†–∏–∫ –∏ –ú–æ—Ä—Ç–∏',
      '3': ' GraphQl',
    },
    text: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –Ω–∞—à —Å–∞–π—Ç, —Ä–∞–±–æ—Ç–∞—é—â–∏–π –Ω–∞ GraphQL! –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–º –º–∏—Ä–æ–º API –†–∏–∫–∞ –∏ –ú–æ—Ä—Ç–∏ —Å –ø–æ–º–æ—â—å—é GraphQL. –û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª—é–±–∏–º—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–∞—Ö, —ç–ø–∏–∑–æ–¥–∞—Ö –∏ –º–Ω–æ–≥–æ–º –¥—Ä—É–≥–æ–º. –ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–µ–º—É –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—é –ø–æ –º—É–ª—å—Ç–∏–≤—Å–µ–ª–µ–Ω–Ω–æ–π!',
    login: '–í–æ–π—Ç–∏',
    register: '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è',
    dashboard: '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞',
  },
  team: {
    aboutTeam: {
      title: '–û –∫–æ–º–∞–Ω–¥–µ',
      text: '–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ - —ç—Ç–æ –≥—Ä—É–ø–ø–∞ —Ç–∞–ª–∞–Ω—Ç–ª–∏–≤—ã—Ö –∏ –ø—Ä–µ–¥–∞–Ω–Ω—ã—Ö —Å–≤–æ–µ–º—É –¥–µ–ª—É –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤, —É–≤–ª–µ—á–µ–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∏–µ–º –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞. –ë–ª–∞–≥–æ–¥–∞—Ä—è —Å–≤–æ–µ–º—É –æ–ø—ã—Ç—É –≤ HTML, CSS –∏ JavaScript –æ–Ω–∏ –≤–æ–ø–ª–æ—â–∞—é—Ç –≤ –∂–∏–∑–Ω—å –≤–µ–±-—Å–∞–π—Ç—ã –∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –ö–æ–º–∞–Ω–¥–∞ —Å—Ç—Ä–µ–º–∏—Ç—Å—è –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏ –ø–µ—Ä–µ–¥–æ–≤—ã—Ö –º–µ—Ç–æ–¥–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏. –û–Ω–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –∏–∑—É—á–∞—é—Ç –Ω–æ–≤—ã–µ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏, –±–∏–±–ª–∏–æ—Ç–µ–∫–∏.',
    },
    ourTeam: {
      title: '–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞',
      '1': {
        name: '–î–º–∏—Ç—Ä–∏–π –ö–æ–Ω–µ–≤',
        description:
          '–ù–∞—á–∏–Ω–∞—é—â–∏–π –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫, –ø–æ–≥—Ä—É–∂–∞—é—â–∏–π—Å—è –≤ –º–∏—Ä React. –ñ–∞–∂–¥–µ—Ç —É—á–∏—Ç—å—Å—è –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã. –î–∞–≤–∞–π—Ç–µ –∫–æ–¥–∏—Ç—å! üöÄ',
      },
      '2': {
        name: '–ù–∞—Ç–∞–ª—å—è –õ–µ–±–µ–¥–µ–≤–∞',
        description:
          '–ù–∞—Ç–∞–ª—å—è –ø–æ–ª—É—á–∏–ª–∞ –≤—ã—Å—à–µ–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ, –Ω–æ –≤—Å—é –∂–∏–∑–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–∞—Å—å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º. –°–≤–æ–π –ø—É—Ç—å –≤ IT –æ–Ω–∞ –Ω–∞—á–∞–ª–∞ —Å Python –∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è, –∞ –∑–∞—Ç–µ–º –ø–æ–∑–Ω–∞–∫–æ–º–∏–ª–∞—Å—å —Å –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–æ–π –∏ –ø–æ–Ω—è–ª–∞, —á—Ç–æ –Ω–∞—à–ª–∞ —Å–≤–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ. –¢–µ–ø–µ—Ä—å –æ–Ω–∞ –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è —Ç–µ–º, —á—Ç–æ –µ–π –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, —á—Ç–æ –µ–µ –∑–∞—Ä—è–∂–∞–µ—Ç –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç.',
      },
      '3': {
        name: '–ù–∏–∫–∏—Ç–∞ –°—Ç–∞—Ä–º–æ—É—Å—Å–æ–≤',
        description:
          '–ù–∏–∫–∏—Ç–∞, –µ—â–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—à–∏—Ö –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã—Ö –º–ª–∞–¥—à–∏—Ö —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤, - –≤–æ–ø–ª–æ—â–µ–Ω–∏–µ –∞–º–±–∏—Ü–∏–π –∏ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞. –ú–æ–ª–æ–¥–æ–π, –Ω–æ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ –æ–ø—ã—Ç–Ω—ã–π, –µ–≥–æ —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ –±—ã—Ç—å –ª—É—á—à–∏–º –æ—â—É—â–∞–µ—Ç—Å—è –≤ –∫–∞–∂–¥–æ–π –∑–∞–¥–∞—á–µ, –∑–∞ –∫–æ—Ç–æ—Ä—É—é –æ–Ω –±–µ—Ä–µ—Ç—Å—è. –ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ—á–∫–∞ –∫–æ–¥–∞, –∫–æ—Ç–æ—Ä—É—é –æ–Ω –ø–∏—à–µ—Ç, –æ—Ç—Ä–∞–∂–∞–µ—Ç –µ–≥–æ –ø—Ä–µ–¥–∞–Ω–Ω–æ—Å—Ç—å –∏ —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ –∫ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É. –° —Ç–∞–∫–æ–π —Å—Ç—Ä–∞—Å—Ç—å—é –º–æ–∂–Ω–æ –Ω–µ —Å–æ–º–Ω–µ–≤–∞—Ç—å—Å—è, —á—Ç–æ –≤ –º–∏—Ä–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –¥–ª—è –Ω–µ–≥–æ –æ—Ç–∫—Ä—ã–≤–∞—é—Ç—Å—è –Ω–æ–≤—ã–µ –≥–æ—Ä–∏–∑–æ–Ω—Ç—ã.',
      },
    },
  },
  authPage: {
    title: {
      login: '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è',
      register: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è',
    },
    toast: {
      title: '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º',
      description: '–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã',
      error: '–û—à–∏–±–∫–∞',
    },
    usernameLabel: '–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
    usernamePlaceholder: '–í–∞—à–µ –∏–º—è',
    emailLabel: 'E-mail –∞–¥—Ä–µ—Å',
    emailPlaceholder: '–í–∞—à e-mail –∞–¥—Ä–µ—Å',
    passwordLabel: '–ü–∞—Ä–æ–ª—å',
    passwordPlaceholder: '–í–∞—à –ø–∞—Ä–æ–ª—å',
    submitButton: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å',
  },
  notFound: {
    title: '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞',
    homeButton: '–í–µ—Ä–Ω—É—Ç—å—Å—è –¥–æ–º–æ–π',
  },
  validation: {
    password: {
      min: '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 8 —Å–∏–º–≤–æ–ª–æ–≤.',
      max: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –ø–∞—Ä–æ–ª—è 32 —Å–∏–º–≤–æ–ª–∞.',
      latin: '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ª–∞—Ç–∏–Ω—Å–∫—É—é –±—É–∫–≤—É',
      number: '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ü–∏—Ñ—Ä—É',
      symbol: `–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Å–∏–º–≤–æ–ª: ,."'!@#$%^&*()_+=-`,
    },
    username: '–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 2 —Å–∏–º–≤–æ–ª–æ–≤.',
  },
  dashboard: {
    docs: '–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è',
    url: {
      title: 'URL –∞–¥—Ä–µ—Å',
      edit: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
      save: '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å',
    },
    variables: '–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ',
    headers: '–ó–∞–≥–æ–ª–æ–≤–∫–∏',
  },
};

export type TextContentType = {
  en: langText;
  ru: langText;
};

export const textContent: TextContentType = {
  en: enText,
  ru: ruText,
};
